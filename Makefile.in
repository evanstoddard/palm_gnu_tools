# Makefile for prc-tools.
#
# Copyright 2002 John Marshall
# Portions copyright 1999-2001 Palm, Inc. or its subsidiaries
#
# This is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

srcdir = @srcdir@
VPATH = @srcdir@

configured_subdirs = @subdirs@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
target = @target@
target_alias = @target_alias@
exeext = @EXEEXT@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
LN_S = @LN_S@

host_subdirs = $(configured_subdirs) doc tools
target_subdirs = crt libc libm include

# FIXME: Do we need more stamping or something to be -j friendly?
all: all-host all-gcc all-target

BUILT_AS = binutils/gas/as-new$(exeext)
BUILT_LD = binutils/ld/ld-new$(exeext)
BUILT_AR = binutils/binutils/ar$(exeext)
BUILT_RANLIB = binutils/binutils/ranlib$(exeext)
BUILT_GCC = gcc/gcc/xgcc$(exeext)
BUILT_PALMDEV_PREP = tools/palmdev-prep$(exeext)

minitooldir = $(target_alias)

all-host:
	-rm -rf $(minitooldir)
	for dir in `echo $(host_subdirs) | sed -e 's/gcc//' -e 's/make//'`; do \
	  if [ -f ./$${dir}/Makefile ]; then \
	    if (cd $${dir} && $(MAKE) all info); then true; else exit 1; fi; \
	  fi; \
	done
	if [ -f ./binutils/Makefile ]; then \
	  mkdir $(minitooldir) && mkdir $(minitooldir)/bin; \
	  cd $(minitooldir)/bin; \
	  [ -x ../../$(BUILT_AS) ] && $(LN_S) ../../$(BUILT_AS) as$(exeext); \
	  [ -x ../../$(BUILT_LD) ] && $(LN_S) ../../$(BUILT_LD) ld$(exeext); \
	fi

all-gcc:
	r=`pwd`; \
	ar1="XFOO="; ranlib1="XFOO="; bt1="XFOO="; \
	[ -x ./$(BUILT_AR) ] && ar1="AR_FOR_TARGET=$$r/$(BUILT_AR)"; \
	[ -x ./$(BUILT_RANLIB) ] \
	    && ranlib1="RANLIB_FOR_TARGET=$$r/$(BUILT_RANLIB)"; \
	[ -d ./$(minitooldir) ] && bt1="build_tooldir=$$r/$(minitooldir)"; \
	if [ -f ./gcc/Makefile ]; then \
	  if (cd gcc; $(MAKE) "$${ar1}" "$${ranlib1}" "$${bt1}" all); \
	      then true; else exit 1; fi; \
	fi

all-target:
	r=`pwd`; \
	ar1="XFOO="; ranlib1="XFOO="; \
	[ -x ./$(BUILT_AR) ] && ar1="AR=$$r/$(BUILT_AR)"; \
	[ -x ./$(BUILT_RANLIB) ] && ranlib1="RANLIB=$$r/$(BUILT_RANLIB)"; \
	if [ -x ./$(BUILT_GCC) ]; then \
	  cc1="CC=$$r/$(BUILT_GCC) -B$$r/gcc/gcc/"; \
	else \
	  cc1="CC=$(target_alias)-gcc"; \
	fi; \
	[ -d ./$(minitooldir) ] && cc1="$${cc1} -B$$r/$(minitooldir)/bin/"; \
	$(BUILT_PALMDEV_PREP) -q --dump-specs none > palmdev-specs; \
	cc1="$${cc1} -specs=$$r/palmdev-specs"; \
	for dir in $(target_subdirs); do \
	  if [ -f ./$${dir}/Makefile ]; then \
	    if (cd $${dir}; $(MAKE) "$${ar1}" "$${ranlib1}" "$${cc1}" all); \
	        then true; else exit 1; fi; \
	  fi; \
	done

# FIXME: delenda est install-wrappers!!
install: install-host install-gcc install-target install-wrappers

# FIXME: these three want unifying too -- will fix install properly soon
# FIXME: install-info removed until this is fixed properly
install-host:
	for dir in `echo $(host_subdirs) | sed -e 's/gcc//' -e 's/make//'`; do \
	  if [ -f ./$${dir}/Makefile ]; then \
	    if (cd $${dir} && $(MAKE) install); then true; else exit 1; fi; \
	  fi; \
	done

install-gcc:
	if [ -f ./gcc/Makefile ]; then \
	  if (cd gcc && $(MAKE) LANGUAGES="c c++" install); then true; else exit 1; fi; \
	fi

install-target:
	for dir in $(target_subdirs); do \
	  if [ -f ./$${dir}/Makefile ]; then \
	    if (cd $${dir} && $(MAKE) install); then true; else exit 1; fi; \
	  fi; \
	done


DRIVER_PROGS = cpp$(exeext) gcc$(exeext) g++$(exeext) c++$(exeext)

install-wrappers:
	$(INSTALL) -d $(tooldir)/real-bin
	if $(bindir)/$(target_alias)-gcc -print-search-dirs | grep ^palmdev: >/dev/null; \
	then \
	  echo "**"; \
	  echo "** $(target_alias)-<driver> wrappers already installed"; \
	  echo "**"; \
	else \
	  for drv in $(DRIVER_PROGS); do \
	    $(INSTALL) $(bindir)/$(target_alias)-$${drv} \
		       $(tooldir)/real-bin/$${drv}; \
	  done; \
	fi
	# Combine real drivers where possible
	cd $(tooldir)/real-bin; \
	rm -f c++$(exeext); \
	ln g++$(exeext) c++$(exeext) \
	|| ln -s g++$(exeext) c++$(exeext) \
	|| $(INSTALL) ./g++$(exeext) ./c++$(exeext)
	# Replace the visible drivers in $(bindir) with the wrapper
	cd $(bindir); \
	target_sdkfind=$(target_alias)-sdkfind$(exeext); \
	for drv in $(DRIVER_PROGS); do \
	  if test -f $(target_alias)-$${drv}; then \
	    rm -f $(target_alias)-$${drv}; \
	    ln $${target_sdkfind} $(target_alias)-$${drv} \
	    || ln -s $${target_sdkfind} $(target_alias)-$${drv} \
	    || $(INSTALL) ./$${target_sdkfind} ./$(target_alias)-$${drv}; \
	  fi; \
	done
	# and in $(tooldir)/bin
	cd $(tooldir)/bin; \
	for drv in $(DRIVER_PROGS); do \
	  if test -f $${drv}; then \
	    rm -f $${drv}; \
	    ln sdkfind$(exeext) $${drv} \
	    || ln -s sdkfind$(exeext) $${drv} \
	    || $(INSTALL) ./sdkfind$(exeext) ./$${drv}; \
	  fi; \
	done


clean:
	for dir in $(host_subdirs) $(target_subdirs); do \
	  if [ -f ./$${dir}/Makefile ]; then \
	    if (cd $${dir} && $(MAKE) clean); then true; else exit 1; fi; \
	  fi; \
	done
	-rm -rf $(minitooldir) palmdev-specs


distdir = prc-tools
nondistpat = ^(binutils|gcc|gdb|make)$$

# The source directory is likely to be a working development directory.
# We need to do some tidying up before creating the distribution tarball:
#
#  * It may contain links to other huge (GCC etc) source trees.  We filter
#    these out even before the first tar invocation to save time.
#  * If the directory is checked out from CVS, it will be littered with
#    "CVS" subdirectories which shouldn't go into the tarball.
#  * If the directory is checked out from Perforce, many of the files will
#    likely be read-only.  We want them to be read-write in the tarball.

dist-tree:
	-rm -rf $(distdir) $(distdir).tar $(distdir).tar.gz
	mkdir $(distdir)
	-chmod 777 $(distdir)
	(cd $(srcdir) && tar cf - `ls | egrep -v '$(nondistpat)'`) \
	| (cd $(distdir) && tar xf -)
	-rm -rf `find $(distdir) -name CVS -print`
	for dir in `find $(distdir) -type d -print`; do \
	  (cd $${dir} && chmod a+rw *); \
	done

dist-tarball:
	tar cf $(distdir).tar $(distdir)
	gzip -9 $(distdir).tar
	-rm -rf $(distdir)


dist: dist-tree dist-tarball

snapshot:
	$(MAKE) -f $(srcdir)/Makefile.in srcdir=$(srcdir) \
	distdir=prc-tools-`date +%Y%m%d` dist-tree dist-tarball

$(distdir)/configure: $(distdir)/configure.in
	cd $(distdir) && autoconf

release-check: $(distdir)/configure

release:
	$(MAKE) -f $(srcdir)/Makefile.in srcdir=$(srcdir) \
	distdir=prc-tools-`grep '^Version:' $(srcdir)/prc-tools.spec | \
			   sed 's/.*: //'` \
	dist-tree release-check dist-tarball

.PHONY: dist-tree dist-tarball dist snapshot release-check release
