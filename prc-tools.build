#! /bin/sh -e
#  Execute this script to produce a minimally "package"-like binary tarball

# This script is pretty much just a stripped-down version of prc-tools.spec
# and in places we scrape data from that file instead of duplicating it here.

#prep
# Before running this script, you should either set $SOURCES to a directory
# containing the binutils/gcc/gdb/make tarballs or put them in the current
# directory, and set $PATCH to a suitable version of patch (one that can
# parse patches in unidiff format and that line-terminates output correctly).
: ${SOURCES:=.} ${PATCH:=patch}
# This script is primarily for Cygwin, hence the PalmDev default
: ${palmdev_prefix:=/PalmDev}

for pkg_ver in `grep '^%setup.*-n' prc-tools.spec | cut -d' ' -f7`; do
  pkg=`echo $pkg_ver | sed 's/-[^-]*//'`
  if [ ! -d $pkg ]; then
    decompression="" extension=""
    [ -f $SOURCES/$pkg_ver.tar.bz2 ] && decompression=j extension=.bz2
    [ -f $SOURCES/$pkg_ver.tar.gz  ] && decompression=z extension=.gz
    tar xvf$decompression $SOURCES/$pkg_ver.tar$extension
    [ -f $pkg_ver.palmos.diff ] && $PATCH -p0 < $pkg_ver.palmos.diff
    mv $pkg_ver $pkg
    # HACK  This is fragile and only works because 2.95.3 is unpacked before
    # 3.2.  We've left the fragility to provide more motivation to lose 2.95.3.
    [ "$pkg_ver" = "gcc-2.95.3" ] && mv $pkg gcc295
  fi
done

touch "gcc295/gcc/cstamp-h.in"

#build
: ${prefix:=/usr/local} ${docdir:=$prefix/doc/prc-tools}

./configure \
  --enable-targets=m68k-palmos,arm-palmos \
  --enable-languages=c,c++ \
  --disable-nls \
  --with-palmdev-prefix=$palmdev_prefix \
  --enable-html-docs=$docdir \
  --prefix=$prefix \
  ${mandir:+--mandir=$mandir} ${infodir:+--infodir=$infodir}

make

#install
: ${DESTDIR:=`pwd`/buildroot}

rm -rf $DESTDIR
make install \
  prefix=$DESTDIR$prefix htmldir=$DESTDIR$docdir \
  ${mandir:+mandir=$DESTDIR$mandir} ${infodir:+infodir=$DESTDIR$infodir}

mkdir -p $DESTDIR$docdir
cp -p README COPYING $DESTDIR$docdir

#policy
: ${exec_prefix=$prefix}
: ${bindir:=$exec_prefix/bin} ${libdir:=$exec_prefix/lib}
: ${infodir:=$prefix/info} ${datadir:=$prefix/share}

strip $DESTDIR$bindir/* $DESTDIR$exec_prefix/*/bin/*
# This picks up all the executable backends, but avoids crt*.o files and such
strip $DESTDIR$libdir/gcc-lib/*/*/*[012]*

#package
: ${PKGBASE:=`pwd`/prc-tools} ${PKGSHORTTAIL:=-binary} ${PKGTAIL:=$PKGSHORTTAIL}

rm -f $PKGBASE$PKGTAIL.tar* $PKGBASE-arm$PKGTAIL.tar* \
      $PKGBASE-htmldocs$PKGTAIL.tar* $PKGBASE-htmldocs$PKGSHORTTAIL.zip

(cd $DESTDIR; tar cvf $PKGBASE$PKGTAIL.tar \
  `echo "
    $bindir/[b-z]*
    $exec_prefix/m68k*
    $libdir/gcc-lib/m68k*
    $datadir/prc-tools
    $infodir/prc-tools*
    $docdir/COPYING
    $docdir/README
  " | sed 's:^ */::' | sort`)
bzip2 $PKGBASE$PKGTAIL.tar

(cd $DESTDIR; tar cvf $PKGBASE-arm$PKGTAIL.tar \
  `echo "
    $bindir/arm*
    $exec_prefix/arm*
    $libdir/gcc-lib/arm*
  " | sed 's:^ */::' | sort`)
bzip2 $PKGBASE-arm$PKGTAIL.tar

(cd $DESTDIR; tar cvf $PKGBASE-htmldocs$PKGTAIL.tar \
  `echo "
    $docdir/[^CR]*
  " | sed 's:^ */::' | sort`)
bzip2 $PKGBASE-htmldocs$PKGTAIL.tar

if /bin/sh -c 'zip -h' >/dev/null 2>&1; then
  (cd $DESTDIR$docdir; zip -l9r $PKGBASE-htmldocs$PKGSHORTTAIL.zip [^CR]*)
fi
