diff -r -c orig/gcc-2.7.2.2/config/xm-gnu.h gcc-2.7.2.2/config/xm-gnu.h
*** orig/gcc-2.7.2.2/config/xm-gnu.h	Thu Jun 15 12:54:14 1995
--- gcc-2.7.2.2/config/xm-gnu.h	Mon Jun 23 08:56:16 1997
***************
*** 24,30 ****
--- 24,33 ----
     CPU/xm-CPU.h and this file xm-gnu.h.  */
  
  #define HAVE_STRERROR		/* GNU has strerror.  */
+ 
+ #ifndef POSIX
  #define POSIX			/* GNU complies to POSIX.1.  */
+ #endif
  
  /* Get a definition of O_RDONLY; some of the GCC files don't include this
     properly and will define it themselves to be zero. */
diff -r -c orig/gcc-2.7.2.2/dbxout.c gcc-2.7.2.2/dbxout.c
*** orig/gcc-2.7.2.2/dbxout.c	Thu Jun 15 11:27:10 1995
--- gcc-2.7.2.2/dbxout.c	Mon Jun 23 08:53:52 1997
***************
*** 156,162 ****
  #define FORCE_TEXT
  #endif
  
! #if defined (USG) || defined (NO_STAB_H)
  #include "gstab.h"  /* If doing DBX on sysV, use our own stab.h.  */
  #else
  #include <stab.h>  /* On BSD, use the system's stab.h.  */
--- 156,162 ----
  #define FORCE_TEXT
  #endif
  
! #if 1 /* defined (USG) || defined (NO_STAB_H) */
  #include "gstab.h"  /* If doing DBX on sysV, use our own stab.h.  */
  #else
  #include <stab.h>  /* On BSD, use the system's stab.h.  */
diff -r -c orig/gcc-2.7.2.2/final.c gcc-2.7.2.2/final.c
*** orig/gcc-2.7.2.2/final.c	Sun Nov 26 18:50:00 1995
--- gcc-2.7.2.2/final.c	Mon Jun 23 08:54:00 1997
***************
*** 70,76 ****
  
  /* Get N_SLINE and N_SOL from stab.h if we can expect the file to exist.  */
  #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)
! #if defined (USG) || defined (NO_STAB_H)
  #include "gstab.h"  /* If doing DBX on sysV, use our own stab.h.  */
  #else
  #include <stab.h>  /* On BSD, use the system's stab.h.  */
--- 70,76 ----
  
  /* Get N_SLINE and N_SOL from stab.h if we can expect the file to exist.  */
  #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)
! #if 1 /* defined (USG) || defined (NO_STAB_H) */
  #include "gstab.h"  /* If doing DBX on sysV, use our own stab.h.  */
  #else
  #include <stab.h>  /* On BSD, use the system's stab.h.  */
diff -r -c orig/gcc-2.7.2.2/gcc.c gcc-2.7.2.2/gcc.c
*** orig/gcc-2.7.2.2/gcc.c	Tue Sep 12 21:15:10 1995
--- gcc-2.7.2.2/gcc.c	Mon Jun 23 08:55:16 1997
***************
*** 37,43 ****
  #include <sys/stat.h>
  #include <errno.h>
  
! #ifndef _WIN32
  #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */
  #else
  #include <process.h>
--- 37,43 ----
  #include <sys/stat.h>
  #include <errno.h>
  
! #if 1 /* ndef _WIN32 */
  #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */
  #else
  #include <process.h>
***************
*** 2022,2028 ****
  
  #endif
  
! #if !defined(__MSDOS__) && !defined(OS2) && !defined(_WIN32)
  
  static int
  pexecute (search_flag, program, argv, not_last)
--- 2022,2028 ----
  
  #endif
  
! #if !defined(__MSDOS__) && !defined(OS2) /* && !defined(_WIN32) */
  
  static int
  pexecute (search_flag, program, argv, not_last)
***************
*** 2127,2133 ****
  }
  #endif /* OS2 */
  
! #if defined(_WIN32)
  
  static int
  pexecute (search_flag, program, argv, not_last)
--- 2127,2133 ----
  }
  #endif /* OS2 */
  
! #if 0 /* defined(_WIN32) */
  
  static int
  pexecute (search_flag, program, argv, not_last)
***************
*** 2262,2268 ****
  #ifdef __MSDOS__
          status = pid = commands[i].pid;
  #else
! #ifdef _WIN32
  	pid = cwait (&status, commands[i].pid, WAIT_CHILD);
  #else
  	pid = wait (&status);
--- 2262,2268 ----
  #ifdef __MSDOS__
          status = pid = commands[i].pid;
  #else
! #if 0 /* def _WIN32 */
  	pid = cwait (&status, commands[i].pid, WAIT_CHILD);
  #else
  	pid = wait (&status);
diff -r -c orig/gcc-2.7.2.2/getpwd.c gcc-2.7.2.2/getpwd.c
*** orig/gcc-2.7.2.2/getpwd.c	Tue May 16 22:25:04 1995
--- gcc-2.7.2.2/getpwd.c	Mon Jun 23 08:54:12 1997
***************
*** 29,35 ****
  #define GUESSPATHLEN 100
  #endif /* (defined (USG) || defined (VMS)) */
  #ifdef _WIN32
! #include <direct.h>
  #endif
  
  char *getenv ();
--- 29,35 ----
  #define GUESSPATHLEN 100
  #endif /* (defined (USG) || defined (VMS)) */
  #ifdef _WIN32
! #include <dirent.h>
  #endif
  
  char *getenv ();
diff -r -c orig/gcc-2.7.2.2/Makefile.in gcc-2.7.2.2/Makefile.in
*** orig/gcc-2.7.2.2/Makefile.in	Sun Nov 26 19:44:24 1995
--- gcc-2.7.2.2/Makefile.in	Mon Jun 23 09:00:26 1997
***************
*** 35,41 ****
  
  # Selection of languages to be made.
  # This is overridden by configure.
! LANGUAGES = c objective-c proto
  
  ALLOCA =
  ALLOCA_FLAGS =
--- 35,41 ----
  
  # Selection of languages to be made.
  # This is overridden by configure.
! LANGUAGES = c
  
  ALLOCA =
  ALLOCA_FLAGS =
***************
*** 56,62 ****
  X_CPPFLAGS =
  T_CPPFLAGS =
  
! CC = cc
  BISON = bison
  BISONFLAGS =
  LEX = flex
--- 56,62 ----
  X_CPPFLAGS =
  T_CPPFLAGS =
  
! CC = gcc
  BISON = bison
  BISONFLAGS =
  LEX = flex
***************
*** 207,213 ****
  # Extension (if any) to put in installed man-page filename.
  manext = .1
  objext = .o
! exeext =
  
  # Directory in which to put man pages.
  mandir = $(prefix)/man/man1
--- 207,213 ----
  # Extension (if any) to put in installed man-page filename.
  manext = .1
  objext = .o
! exeext = .exe
  
  # Directory in which to put man pages.
  mandir = $(prefix)/man/man1
***************
*** 2205,2211 ****
  # Install the include directory using tar.
  install-headers-tar: stmp-headers $(STMP_FIXPROTO) install-include-dir
  	(cd include; \
! 	 tar -cf - .; exit 0) | (cd $(libsubdir)/include; tar $(TAROUTOPTS) - )
  # /bin/sh on some systems returns the status of the first tar,
  # and that can lose with GNU tar which always writes a full block.
  # So use `exit 0' to ignore its exit status.
--- 2205,2211 ----
  # Install the include directory using tar.
  install-headers-tar: stmp-headers $(STMP_FIXPROTO) install-include-dir
  	(cd include; \
! 	 tar -cf - .; exit 0) | (cd $(libsubdir)/include; tar $(TAROUTOPTS) - ; exit 0)
  # /bin/sh on some systems returns the status of the first tar,
  # and that can lose with GNU tar which always writes a full block.
  # So use `exit 0' to ignore its exit status.
