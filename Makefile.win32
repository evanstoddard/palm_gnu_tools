PREFIX = /pilotgcc
BUILDHOST = i386-slackware-linux
THOST = i386-gnuwin32
HOST = i386-cygwin32

EXEEXT = .exe

CC = $(HOST)-gcc
BHOSTCC = gcc
CFLAGS = -O2 -g -I$(PREFIX)/include
# -g -DDEBUG

TOOLDIR = $(PREFIX)/bin

BINUTILSDIR = ../binutils-2.7
GCCDIR = ../gcc-2.7.2.2
GDBDIR = ../gdb-4.16

GNUARCH = /cdrom/gnu

TTY = /dev/cua0

M68K_BFD = $(PREFIX)/lib/libm68k-palmos-coff-bfd.a

LBFD = `if [ -f $(M68K_BFD) ]; \
	then echo $(M68K_BFD); \
	else echo "-lbfd"; fi` -liberty

LIBCDIR = libc.0.1.2
LIBMDIR = libmf.0.1.2
LIBGLIBDIR = libglib.0.1.0

PILRCDIR = pilrc1.5

# export doesn't work on make in gnuwin32 b18...
MAKEEXPORTS = PREFIX=$(PREFIX) TOOLDIR=$(TOOLDIR) \
	LIBCDIR=$(LIBCDIR) LIBMDIR=$(LIBMDIR) LIBGLIBDIR=$(LIBGLIBDIR)

all: dummy pilrc$(EXEEXT) build-prc$(EXEEXT) obj-res$(EXEEXT) txt2bitm$(EXEEXT) exportlist

install: all dummy install-man
	cp -f pilrc$(EXEEXT) $(PREFIX)/m68k-palmos-coff/bin
	cp -f txt2bitm$(EXEEXT) $(PREFIX)/m68k-palmos-coff/bin
	cp -f obj-res$(EXEEXT) $(PREFIX)/m68k-palmos-coff/bin
	cp -f build-prc$(EXEEXT) $(PREFIX)/m68k-palmos-coff/bin
	cp -f stubgen $(PREFIX)/m68k-palmos-coff/bin
	cp -f exportlist $(PREFIX)/m68k-palmos-coff/bin
	-cp -raf PalmOS1 $(PREFIX)/m68k-palmos-coff/include
	-cp -raf PalmOS2 $(PREFIX)/m68k-palmos-coff/include
	ln -snf $(PREFIX)/m68k-palmos-coff/include/PalmOS2 $(PREFIX)/m68k-palmos-coff/include/PalmOS
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/pilrc$(EXEEXT) $(PREFIX)/bin/pilrc$(EXEEXT)
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/txt2bitm$(EXEEXT) $(PREFIX)/bin/txt2bitm$(EXEEXT)
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/obj-res$(EXEEXT) $(PREFIX)/bin/m68k-palmos-coff-obj-res$(EXEEXT)
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/exportlist $(PREFIX)/bin/m68k-palmos-coff-exportlist
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/build-prc$(EXEEXT) $(PREFIX)/bin/build-prc$(EXEEXT)
	ln -sf $(PREFIX)/m68k-palmos-coff/bin/stubgen $(PREFIX)/bin/m68k-palmos-coff-stubgen

install-man: dummy
	cp man/* $(PREFIX)/man/man1

obj-res.o: obj-res.c
	$(CC) $(CFLAGS) -I$(PREFIX)/include -c obj-res.c

obj-res$(EXEEXT): obj-res.o
	$(CC) $(CFLAGS) obj-res.o -L$(PREFIX)/lib $(LBFD) -o obj-res$(EXEEXT)

build-prc$(EXEEXT): emit-prc.o build-prc.o
	$(CC) $(CFLAGS) build-prc.o emit-prc.o -o build-prc$(EXEEXT)

txt2bitm$(EXEEXT): txt2bitm.o
	$(CC) $(CFLAGS) txt2bitm.o -o txt2bitm$(EXEEXT)

$(PILRCDIR)/pilrc:
	(cd $(PILRCDIR) ; make CC=$(HOST)-gcc)

pilrc$(EXEEXT): $(PILRCDIR)/pilrc
	mv $(PILRCDIR)/pilrc pilrc$(EXEEXT)

exportlist: dummy
	echo \#!/bin/sh > $@
	echo -n $(TOOLDIR) >> $@
	echo -n /m68k-palmos-coff-nm \$$1 >> $@
	echo " | grep ' T ' | cut -c12- | sort -u" >> $@
	chmod +x $@

gnuuntar: stamp.gnuuntar

stamp.gnuuntar:
	rm -rf ../gcc-2.7.2.2 ../binutils-2.7 ../gdb-4.16
	cd .. ; tar -zxvf $(GNUARCH)/binutils-2.7.tar.gz
	cd .. ; tar -zxvf $(GNUARCH)/gcc-2.7.2.2.tar.gz
	cd .. ; tar -zxvf $(GNUARCH)/gdb-4.16.tar.gz
	touch stamp.gnuuntar

patch: stamp.patch

stamp.patch:
	cat *.palmos.diff | (cd .. ; patch -p0 )
	touch stamp.patch

winpatch: stamp.winpatch

stamp.winpatch:
	cat *.gnuwin32.diff | (cd .. ; patch -p0 )
	touch stamp.patch

gnutools: stamp.binutils stamp.gcc stamp.gdb

stamp.binutils:
	cd $(BINUTILSDIR) ; CC=$(HOST)-gcc AR=$(HOST)-ar RANLIB=$(HOST)-ranlib \
./configure --build=$(BUILDHOST) \
--host=$(HOST) \
--target=m68k-palmos-coff \
-v --prefix=$(PREFIX)
	cd $(BINUTILSDIR) ; make HOST_CC=$(BHOSTCC) \
CC_FOR_BUILD=$(BHOSTCC) \
CXX_FOR_BUILD=$(BHOSTCC) \
CC=$(HOST)-gcc \
AR=$(HOST)-ar \
RANLIB=$(HOST)-ranlib \
GCC_FOR_TARGET=$(HOST)-gcc \
CC_FOR_TARGET=$(HOST)-gcc \
CXX_FOR_TARGET=$(HOST)-gcc \
AS_FOR_TARGET=$(HOST)-as \
AR_FOR_TARGET=$(HOST)-ar \
NM_FOR_TARGET=$(HOST)-nm \
RANLIB_FOR_TARGET=$(HOST)-ranlib \
HOST_PREFIX=bhost- \
HOST_PREFIX_1=bhost- \
LANGUAGES=c
	cd $(BINUTILSDIR) ; make install
	touch $@

build.gcc:
	cd $(GCCDIR) ; CC=$(HOST)-gcc AR=$(HOST)-ar RANLIB=$(HOST)-ranlib \
./configure --build=$(BUILDHOST) \
--host=$(THOST) \
--target=m68k-palmos-coff \
-v --prefix=$(PREFIX) --program-prefix=m68k-palmos-coff-
	cd $(GCCDIR) ; ln -sf cccp cccp.exe
	cd $(GCCDIR) ; ln -sf xgcc xgcc.exe
	cd $(GCCDIR) ; ln -sf cc1 cc1.exe
	cd $(GCCDIR) ; make HOST_CC=$(BHOSTCC) \
CC_FOR_BUILD=$(BHOSTCC) \
CXX_FOR_BUILD=$(BHOSTCC) \
CC=$(HOST)-gcc \
AR=$(HOST)-ar \
RANLIB=$(HOST)-ranlib \
GCC_FOR_TARGET=$(HOST)-gcc \
CC_FOR_TARGET=$(HOST)-gcc \
CXX_FOR_TARGET=$(HOST)-gcc \
AS_FOR_TARGET=$(HOST)-as \
AR_FOR_TARGET=$(HOST)-ar \
NM_FOR_TARGET=$(HOST)-nm \
RANLIB_FOR_TARGET=$(HOST)-ranlib \
HOST_PREFIX=bhost- \
HOST_PREFIX_1=bhost- \
LANGUAGES=c

install.gcc:
	for i in install-common install-man lang.install-normal install-driver ;do \
cd $(GCCDIR) ; make HOST_CC=$(BHOSTCC) \
CC_FOR_BUILD=$(BHOSTCC) \
CXX_FOR_BUILD=$(BHOSTCC) \
CC=$(HOST)-gcc \
AR=$(HOST)-ar \
RANLIB=$(HOST)-ranlib \
GCC_FOR_TARGET=$(HOST)-gcc \
CC_FOR_TARGET=$(HOST)-gcc \
CXX_FOR_TARGET=$(HOST)-gcc \
AS_FOR_TARGET=$(HOST)-as \
AR_FOR_TARGET=$(HOST)-ar \
NM_FOR_TARGET=$(HOST)-nm \
RANLIB_FOR_TARGET=$(HOST)-ranlib \
HOST_PREFIX=bhost- \
HOST_PREFIX_1=bhost- \
LANGUAGES=c $$i ;\
done
	touch $@

stamp.gdb:
	cd $(GDBDIR) ; CC=$(HOST)-gcc AR=$(HOST)-ar RANLIB=$(HOST)-ranlib \
./configure --build=$(BUILDHOST) \
--host=$(HOST) \
--target=m68k-palmos-coff \
-v --prefix=$(PREFIX) --program-prefix=m68k-palmos-coff-
	cd $(GDBDIR) ; make HOST_CC=$(BHOSTCC) \
CC_FOR_BUILD=$(BHOSTCC) \
CXX_FOR_BUILD=$(BHOSTCC) \
CC=$(HOST)-gcc \
AR=$(HOST)-ar \
RANLIB=$(HOST)-ranlib \
GCC_FOR_TARGET=$(HOST)-gcc \
CC_FOR_TARGET=$(HOST)-gcc \
CXX_FOR_TARGET=$(HOST)-gcc \
AS_FOR_TARGET=$(HOST)-as \
AR_FOR_TARGET=$(HOST)-ar \
NM_FOR_TARGET=$(HOST)-nm \
RANLIB_FOR_TARGET=$(HOST)-ranlib \
HOST_PREFIX=bhost- \
HOST_PREFIX_1=bhost- \
LANGUAGES=c
	touch $@

install.gdb:
	cd $(GDBDIR) ; make install
	touch $@

dummy:

clean:
	rm -f *.[oa] build-prc$(EXEEXT) obj-res$(EXEEXT) pilrc$(EXEEXT)
	rm -f txt2bitm$(EXEEXT) exportlist *.bin *.sa
	rm -f stamp.* build.* install.*
	cd $(PILRCDIR) ; make clean
	cd gdbpanel ; make clean
	cd example ; make clean
	cd $(LIBCDIR) ; make clean
	cd $(LIBMDIR) ; make clean
	cd $(LIBGLIBDIR) ; make clean
