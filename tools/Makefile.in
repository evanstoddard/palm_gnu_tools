# Makefile for prc-tools.
#
# Copyright 1998, 1999, 2002 John Marshall.
#
# This is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
CFLAGS = @CFLAGS@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
target = @target@
target_alias = @target_alias@
exeext = @EXEEXT@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
RANLIB = @RANLIB@
LEX = @LEX@
YACC = @YACC@

# In a single target build, the target's BFD and libiberty from
# ../binutils/{bfd,libiberty} are used; but when there are multiple
# targets, extra multi-target versions are built in ../{bfd,liberty}.
# Configure will set this appropriately.
BFDIBERTY = @tools_bfdiberty@

INCDIRS = -I. -I$(srcdir) -I$(srcdir)/../binutils/include -I$(BFDIBERTY)/bfd
LIBDIRS = -L. -L$(BFDIBERTY)/bfd -L$(BFDIBERTY)/libiberty

ALL_CFLAGS = $(INCDIRS) $(CPPFLAGS) $(CFLAGS)
ALL_CXXFLAGS = $(INCDIRS) $(CPPFLAGS) $(CXXFLAGS)
ALL_LDFLAGS = $(LIBDIRS) $(LDFLAGS)

UTILS_DEFINES = -DPRC_TOOLS_VERSION=\"@prc_tools_version@\"

PALMDEV_PREP_DEFINES = \
  -DSTANDARD_EXEC_PREFIX=\"$(libdir)/gcc-lib\" \
  -DPALMDEV_PREFIX=\"@palmdev_prefix@\"


PFD = libpfd.a

GENERIC_PROGS = build-prc$(exeext) palmdev-prep$(exeext)

PREFIXED_PROGS = obj-res$(exeext) multigen$(exeext) stubgen$(exeext)

INSTALL_FILES = $(GENERIC_PROGS) $(PREFIXED_PROGS)

all: $(INSTALL_FILES)

install: $(INSTALL_FILES)
	$(INSTALL) -d $(bindir)
	$(INSTALL) -d $(tooldir)/bin
	for f in $(GENERIC_PROGS); do \
	  echo $${f}; \
	  $(INSTALL) $${f} $(bindir)/$${f}; \
	done
	for f in $(PREFIXED_PROGS); do \
	  echo $${f}; \
	  $(INSTALL) $${f} $(bindir)/$(target_alias)-$${f}; \
	  rm -f $(tooldir)/bin/$${f}; \
	  ln $(bindir)/$(target_alias)-$${f} $(tooldir)/bin/$${f} \
	  || ln -s $(bindir)/$(target_alias)-$${f} $(tooldir)/bin/$${f} \
	  || $(INSTALL) $(bindir)/$(target_alias)-$${f} $(tooldir)/bin/$${f}; \
	done
	# These ones shouldn't have been installed under the unprefixed
	# names, but they were for a while.  We'll keep them a while longer
	# for compatibility.
	cd $(bindir); \
	for f in obj-res$(exeext) multigen$(exeext) stubgen$(exeext); do \
	  rm -f $${f}; \
	  ln $(target_alias)-$${f} $${f} \
	  || ln -s $(target_alias)-$${f} $${f} \
	  || $(INSTALL) ./$(target_alias)-$${f} ./$${f}; \
	done


.SUFFIXES: .cpp

.c.o:
	$(CC) $(ALL_CFLAGS) -o $@ -c $<

.cpp.o:
	$(CXX) $(ALL_CXXFLAGS) -o $@ -c $<

obj_res_objs = obj-res.o binres.o utils.o
obj-res$(exeext): $(obj_res_objs) $(PFD)
	$(CXX) $(ALL_LDFLAGS) -o $@ $(obj_res_objs) -lbfd -liberty -lpfd

build_prc_objs = build-prc.o binres.o utils.o def.yy.o def.tab.o
build-prc$(exeext): $(build_prc_objs) $(PFD)
	$(CXX) $(ALL_LDFLAGS) -o $@ $(build_prc_objs) -lbfd -liberty -lpfd

multigen_objs = multigen.o utils.o def.yy.o def.tab.o
multigen$(exeext): $(multigen_objs) $(PFD)
	$(CC) $(ALL_LDFLAGS) -o $@ $(multigen_objs) -liberty -lpfd

stubgen_objs = stubgen.o utils.o def.yy.o def.tab.o
stubgen$(exeext): $(stubgen_objs) $(PFD)
	$(CC) $(ALL_LDFLAGS) -o $@ $(stubgen_objs) -liberty -lpfd

palmdev_prep_objs = palmdev-prep.o utils.o dirutils.o
palmdev-prep$(exeext): $(palmdev_prep_objs)
	$(CC) $(ALL_LDFLAGS) -o $@ $(palmdev_prep_objs) -liberty

build-prc.o: build-prc.cpp utils.h def.h binres.hpp \
	     pfd.hpp pfdheader.h pfdio.hpp
obj-res.o: obj-res.cpp binres.hpp pfd.hpp pfdheader.h utils.h
multigen.o: multigen.c multicode-s.str multicode-ld.str utils.h def.h
stubgen.o: stubgen.c glib-jumps-s.str glib-stubs-c.str syslib-dispatch-s.str \
	   utils.h def.h pfdheader.h
binres.o: binres.cpp binres.hpp pfd.hpp pfdheader.h pfdio.hpp utils.h
dirutils.o: dirutils.c utils.h

utils.o: utils.c utils.h
	$(CC) $(ALL_CFLAGS) $(UTILS_DEFINES) -c $(srcdir)/utils.c

palmdev-prep.o: palmdev-prep.c utils.h
	$(CC) $(ALL_CFLAGS) $(PALMDEV_PREP_DEFINES) -c $(srcdir)/palmdev-prep.c

def.yy.o: def.yy.c def.tab.h utils.h pfdheader.h
def.tab.o: def.tab.c utils.h def.h pfdheader.h
def.tab.h: def.tab.c

def.yy.c: def.l def.tab.h utils.h pfdheader.h
	$(LEX) -is $(srcdir)/def.l \
	  && mv lex.yy.c def.yy.c

def.tab.c: def.y utils.h def.h pfdheader.h
	$(YACC) -dv $(srcdir)/def.y \
	  && mv y.tab.c def.tab.c && mv y.tab.h def.tab.h \
	  && mv y.output def.output


CODIFY = sed -f $(srcdir)/templates/codify.sed

glib-jumps-s.str: templates/glib-jumps.s templates/codify.sed
	$(CODIFY) $(srcdir)/templates/glib-jumps.s > glib-jumps-s.str

glib-stubs-c.str: templates/glib-stubs.c templates/codify.sed
	$(CODIFY) $(srcdir)/templates/glib-stubs.c > glib-stubs-c.str

syslib-dispatch-s.str: templates/syslib-dispatch.s templates/codify.sed
	$(CODIFY) $(srcdir)/templates/syslib-dispatch.s > syslib-dispatch-s.str

multicode-s.str: templates/multicode.s templates/codify.sed
	$(CODIFY) $(srcdir)/templates/multicode.s > multicode-s.str

multicode-ld.str: templates/multicode.ld templates/codify.sed
	$(CODIFY) $(srcdir)/templates/multicode.ld > multicode-ld.str


# This PFD library ought eventually to be separated off

PFD_OBJS = pfd.o pfdheader.o pfdtime.o

pfd.o: pfd.cpp pfd.hpp pfdio.hpp pfdheader.h
pfdheader.o: pfdheader.c pfdheader.h
pfdtime.o: pfdtime.c pfdheader.h

libpfd.a: $(PFD_OBJS)
	ar cr $@ $(PFD_OBJS)
	$(RANLIB) $@

clean:
	-rm -f *.o *.a *.str def.*.* def.output
	-rm -f $(INSTALL_FILES)
